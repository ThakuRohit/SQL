%PDF-1.3
%ºß¬à
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 4 0 R
>>
endobj
4 0 obj
<<
/Length 2914
>>
stream
0.5670000000000001 w
0 G
BT
/F1 16 Tf
18.3999999999999986 TL
0 g
28.3464566929133888 813.5435433070865656 Td
(Keypoints) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 785.1970866141732586 Td
(- In SQL, there are two broad classifications for string types: fixed length and variable length.) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 756.8506299212598378 Td
(- Fixed length strings have a predetermined length and do not change, while variable length) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 742.6774015748030706 Td
(strings can vary in length.) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 714.3309448818897636 Td
(- Other types of string types in SQL include binary strings \(used for storing large objects like) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 700.15771653543311 Td
(images\) and text strings \(used for storing large amounts of data like books\).) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 671.8112598425196893 Td
(- Unicode character strings are used for storing international characters like accents or Chinese) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 657.6380314960629221 Td
(characters.) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 629.291574803149615 Td
(- In SQL, the three choices for character string types are char \(fixed length\), varchar \(variable) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 615.1183464566928478 Td
(length\), and varchar\(max\) \(variable length with a maximum size of 2 gigabytes\).) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 586.7718897637794271 Td
(- When using char, the length of the string is specified and the storage size is fixed.) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 558.42543307086612 Td
(- When using varchar, the length of the string can vary and the storage size is based on the) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 544.2522047244094665 Td
(length of the string plus two bytes of overhead.) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 515.9057480314959321 Td
(- The choice between char and varchar depends on whether the length of the string is fixed or) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 501.7325196850393354 Td
(variable.) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 473.3860629921259147 Td
(- If a large amount of data needs to be stored, varchar\(max\) can be used with a maximum size) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 459.2128346456692611 Td
(of 2 gigabytes.) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
28.3464566929133888 430.8663779527558404 Td
(- The choice of string type depends on the specific requirements of the data being stored.) Tj
ET
endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R ]
/Count 1
>>
endobj
5 0 obj
<<
/Type /Font
/BaseFont /Helvetica
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
6 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
7 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
8 0 obj
<<
/Type /Font
/BaseFont /Helvetica-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
9 0 obj
<<
/Type /Font
/BaseFont /Courier
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
10 0 obj
<<
/Type /Font
/BaseFont /Courier-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
11 0 obj
<<
/Type /Font
/BaseFont /Courier-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
12 0 obj
<<
/Type /Font
/BaseFont /Courier-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
13 0 obj
<<
/Type /Font
/BaseFont /Times-Roman
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
14 0 obj
<<
/Type /Font
/BaseFont /Times-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
15 0 obj
<<
/Type /Font
/BaseFont /Times-Italic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
16 0 obj
<<
/Type /Font
/BaseFont /Times-BoldItalic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
17 0 obj
<<
/Type /Font
/BaseFont /ZapfDingbats
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
18 0 obj
<<
/Type /Font
/BaseFont /Symbol
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 5 0 R
/F2 6 0 R
/F3 7 0 R
/F4 8 0 R
/F5 9 0 R
/F6 10 0 R
/F7 11 0 R
/F8 12 0 R
/F9 13 0 R
/F10 14 0 R
/F11 15 0 R
/F12 16 0 R
/F13 17 0 R
/F14 18 0 R
>>
/XObject <<
>>
>>
endobj
19 0 obj
<<
/Producer (jsPDF 2.5.1)
/CreationDate (D:20240812034034+05'30')
>>
endobj
20 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
>>
endobj
xref
0 21
0000000000 65535 f 
0000003118 00000 n 
0000004935 00000 n 
0000000015 00000 n 
0000000152 00000 n 
0000003175 00000 n 
0000003300 00000 n 
0000003430 00000 n 
0000003563 00000 n 
0000003700 00000 n 
0000003823 00000 n 
0000003952 00000 n 
0000004084 00000 n 
0000004220 00000 n 
0000004348 00000 n 
0000004475 00000 n 
0000004604 00000 n 
0000004737 00000 n 
0000004839 00000 n 
0000005183 00000 n 
0000005269 00000 n 
trailer
<<
/Size 21
/Root 20 0 R
/Info 19 0 R
/ID [ <A7366E51C3B6AB959E7EA9B605447CAD> <A7366E51C3B6AB959E7EA9B605447CAD> ]
>>
startxref
5373
%%EOF